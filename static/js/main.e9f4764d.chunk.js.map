{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","ALPHABET","sort","a","b","localeCompare","LENGTH","length","console","log","reverse","App","useState","NONE","reorderOptions","SetReorderOptions","className","type","onClick","actual","map","product","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,iEAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAazB,OAXIC,IAAaJ,EAASO,UACxBD,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAG1CN,IAAaJ,EAASY,QACxBN,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,UAI3CC,QAAQC,IAAIX,EAAUC,IAEA,IAAfA,EACHC,EACAA,EAAaU,W,SA9BdhB,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAiCE,IAAMiB,EAAgB,WAC3B,MAA4CC,mBAAS,CACnDd,SAAUJ,EAASmB,KACnBd,YAAY,IAFd,mBAAOe,EAAP,KAAuBC,EAAvB,KAiCA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,oCACPF,EAAehB,WAAaJ,EAASO,SACzC,GACA,YACEiB,QArCa,WACnBH,EAAkB,CAChBjB,SAAUJ,EAASO,SACnBF,WAAYe,EAAef,cA4BzB,iCAWA,wBACEkB,KAAK,SACLD,UAAS,yCACLF,EAAehB,WAAaJ,EAASY,OAC3C,GACA,YACEY,QAzCa,WACnBH,EAAkB,CAChBjB,SAAUJ,EAASY,OACnBP,WAAYe,EAAef,cAgCzB,4BAWA,wBACEkB,KAAK,SACLD,UAAS,yCACLF,EAAef,WAAa,GAAK,YACrCmB,QA3CQ,WACdH,GAAkB,SAACI,GAAD,mBAAC,eACdA,GADa,IAEhBpB,YAAaoB,EAAOpB,iBAoClB,uBASgC,IAA9Be,EAAef,YACde,EAAehB,WAAaJ,EAASmB,OAEpC,wBACEI,KAAK,SACLD,UAAU,4BACVE,QA/CE,WACZH,EAAkB,CAChBjB,SAAUJ,EAASmB,KACnBd,YAAY,KAyCN,sBAUN,6BACE,6BACGH,EAAkBD,EAAiBmB,GACjCM,KAAI,SAAAC,GAAO,OACV,oBAAI,UAAQ,OAAZ,SAAoBA,eCpIlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e9f4764d.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  if (sortType === SortType.ALPHABET) {\n    visibleGoods.sort((a, b) => a.localeCompare(b));\n  }\n\n  if (sortType === SortType.LENGTH) {\n    visibleGoods.sort((a, b) => a.length - b.length);\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return isReversed === false\n    ? visibleGoods\n    : visibleGoods.reverse();\n}\n\nexport const App: React.FC = () => {\n  const [reorderOptions, SetReorderOptions] = useState({\n    sortType: SortType.NONE,\n    isReversed: false,\n  });\n\n  const sortByLetter = () => {\n    SetReorderOptions({\n      sortType: SortType.ALPHABET,\n      isReversed: reorderOptions.isReversed,\n    });\n  };\n\n  const sortByLength = () => {\n    SetReorderOptions({\n      sortType: SortType.LENGTH,\n      isReversed: reorderOptions.isReversed,\n    });\n  };\n\n  const reverse = () => {\n    SetReorderOptions((actual) => ({\n      ...actual,\n      isReversed: !actual.isReversed,\n    }));\n  };\n\n  const reset = () => {\n    SetReorderOptions({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info\n          ${reorderOptions.sortType === SortType.ALPHABET\n      ? ''\n      : 'is-light'}`}\n          onClick={sortByLetter}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success\n            ${reorderOptions.sortType === SortType.LENGTH\n      ? ''\n      : 'is-light'}`}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning\n            ${reorderOptions.isReversed ? '' : 'is-light'}`}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {(reorderOptions.isReversed === true\n        || reorderOptions.sortType !== SortType.NONE)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={reset}\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      <ul>\n        <ul>\n          {getReorderedGoods(goodsFromServer, reorderOptions)\n            .map(product => (\n              <li data-cy=\"Good\">{product}</li>\n            ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}